<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ingre">
  <!-- 메뉴 등록 -->
  <insert id="ingreReg" parameterType="ingre">
  	insert into ingredients values (seq_ingre_idx.nextval, #{ingreLabel}, #{ingreType}, #{ingreCost15}, #{ingreCost30}, 0, 
  	#{ingreKcal}, #{ingreActive}, #{ingreUnit}, #{ingreDescription}, 
  	<choose>
		  <when test="ingreFilepath != null">
		  	 #{ingreFilepath},
		  </when>
		  <otherwise>
		  	null,
		  </otherwise>
	  </choose>
  	sysdate)
  </insert>
  
  <!-- 재료 리스트 개수 구하기 -->
  <select id="ingreTotalCount" parameterType="map" resultType="_int">
  	select count(*) as cnt from ingredients
  	<if test="searchType != null and searchType != '' and searchType != 'null' and searchVal != null and searchVal != '' and searchVal != 'null'"> <!-- 검색했을 경우 -->
  		where 
  		<if test="searchType.equals('ingreType')">	<!-- 재료 카테고리 선택 -->
  			ingre_type = #{searchVal}
  		</if>
  		<if test="searchType.equals('ingreDiscntRate')">
  			<if test='searchVal.equals("1")'> <!-- 할인중 -->
  				ingre_discnt_rate > 0
  			</if>
  			<if test='searchVal.equals("0")'> <!-- 할인 안하는것 -->
  				ingre_discnt_rate = 0 and ingre_type='메인재료'
  			</if>
  		</if>
  		<if test="searchType.equals('ingreActive')">
  			<if test='searchVal.equals("1")'> <!-- 활성화 -->
  				ingre_active = #{searchVal}
  			</if>
  			<if test='searchVal.equals("0")'> <!-- 비활성화 -->
  				ingre_active = #{searchVal}
  			</if>
  		</if>
  	</if>
  </select>
  
  <!-- 재료 리스트 구하기 -->
  <select id="ingreSelectAll" parameterType="map" resultType="ingre">
  	select rnum, ingre_idx as ingreIdx, ingre_label as ingreLabel, ingre_type as ingreType, ingre_cost15 as ingreCost15, ingre_cost30 as ingreCost30, ingre_discnt_rate as ingreDiscntRate, ingre_kcal as ingreKcal, ingre_active as ingreActive, <!-- ingre_unit as ingreUnit,  ingre_description as ingreDescription,--> ingre_filepath as ingreFilepath,ingre_reg_date as ingreRegDate 
  	from (select rownum as rnum, i.* from(select * from ingredients 
  	<if test="searchType != null and searchType != '' and searchVal != null and searchVal != '' and searchType != 'null' and searchVal != 'null'"> <!-- 검색했을 경우 -->
  		where
  		<if test="searchType.equals('ingreType')">	<!-- 재료 카테고리 선택 -->
  			ingre_type = #{searchVal}
  		</if>
  		<if test="searchType.equals('ingreDiscntRate')">
  			<if test='searchVal.equals("1")'> <!-- 할인중 -->
  				ingre_discnt_rate > 0
  			</if>
  			<if test='searchVal.equals("0")'> <!-- 할인 안하는것 -->
  				ingre_discnt_rate = 0 and ingre_type='메인재료'
  			</if>
  		</if>
  		<if test="searchType.equals('ingreActive')">
  			<if test='searchVal.equals("1")'> <!-- 활성화 -->
  				ingre_active = #{searchVal}
  			</if>
  			<if test='searchVal.equals("0")'> <!-- 비활성화 -->
  				ingre_active = #{searchVal}
  			</if>
  		</if>
  	</if>
  	 order by ingre_reg_date desc) i) where rnum between #{start} and #{end}
  </select>
  
  <!-- 활성화여부 변경시 업데이트하기 -->
  <update id="updateIngreActive" parameterType="map">
  	update ingredients set ingre_active=#{ingreActive} where ingre_idx=#{ingreIdx}
  </update>
  
  <!-- 재료 리스트 페이지에서 검색박스에서 재료 카테로기 선택시 하위 값 가져오기 -->
  <select id="getIngreType" resultType="string">
  	select distinct ingre_type from ingredients
  </select>
  
  <!-- 재료정보 가져오기(1개) -->
  <select id="goIngreUpdate" parameterType="string" resultType="ingre">
  	select ingre_idx as ingreIdx, ingre_label as ingreLabel, ingre_type as ingreType, ingre_cost15 as ingreCost15, ingre_cost30 as ingreCost30, ingre_discnt_rate as ingreDiscntRate, ingre_kcal as ingreKcal, ingre_active as ingreActive, ingre_unit as ingreUnit, ingre_description as ingreDescription, ingre_filepath as ingreFilepath,ingre_reg_date as ingreRegDate 
  	from ingredients where ingre_idx=#{ingreIdx}
  </select>
  
  <!-- 고객주문페이지용 -->
  <!-- 재료정보 가져오기(고객 주문 테이블에서 ingre_label로 요청) -->
  <select id="selectOneIngre" parameterType="ingre" resultType="ingre">
  	select ingre_idx as ingreIdx, ingre_label as ingreLabel, ingre_type as ingreType, ingre_cost15 as ingreCost15, ingre_cost30 as ingreCost30, ingre_discnt_rate as ingreDiscntRate, ingre_kcal as ingreKcal, ingre_active as ingreActive, ingre_unit as ingreUnit, ingre_description as ingreDescription, ingre_filepath as ingreFilepath,ingre_reg_date as ingreRegDate 
  	from ingredients where ingre_label=#{ingreLabel} and ingre_type = #{ingreType}
  </select>
  <!-- 타입별 리스트  -->
  <select id="selectIngreList" parameterType="ingre" resultType="ingre">
  	select 
  		ingre_label as ingreLabel, ingre_type as ingreType, ingre_cost15 as ingreCost15, ingre_cost30 as ingreCost30, ingre_discnt_rate as ingreDiscntRate, ingre_kcal as ingreKcal, ingre_filepath as ingreFilepath, ingre_description as ingreDescription
  	from ingredients where ingre_Type=#{ingreType}
  </select>
  
  <!-- 재료 수정하기 -->
  <update id="ingreUpdate" parameterType="ingre">
  	update ingredients set ingre_label=#{ingreLabel}, ingre_type=#{ingreType}, ingre_cost15=#{ingreCost15}, ingre_cost30=#{ingreCost30}, ingre_kcal=#{ingreKcal}, ingre_active=#{ingreActive}, ingre_unit=#{ingreUnit}, ingre_description=#{ingreDescription}, ingre_filepath=#{ingreFilepath} where ingre_idx=#{ingreIdx}
  </update>
  <!-- 재료 삭제하기 -->
  <delete id="ingreDelete" parameterType="string">
  	delete ingredients where ingre_idx=#{ingreIdx}
  </delete>
  
  <!-- 엑셀 다운로드할 리스트 -->
  <select id="ingreListExcel" parameterType="map" resultType="ingre">
  	select rnum, ingre_idx as ingreIdx, ingre_label as ingreLabel, ingre_type as ingreType, ingre_cost15 as ingreCost15, ingre_cost30 as ingreCost30, ingre_discnt_rate as ingreDiscntRate, ingre_kcal as ingreKcal, ingre_active as ingreActive, ingre_unit as ingreUnit, ingre_description as ingreDescription, ingre_filepath as ingreFilepath,ingre_reg_date as ingreRegDate 
  	from (select rownum as rnum, i.* from(select * from ingredients 
  	<if test="searchType != null and searchType != '' and searchVal != null and searchVal != '' and searchType != 'null' and searchVal != 'null'"> <!-- 검색했을 경우 -->
  		where
  		<if test="searchType.equals('ingreType')">	<!-- 재료 카테고리 선택 -->
  			ingre_type = #{searchVal}
  		</if>
  		<if test="searchType.equals('ingreDiscntRate')">
  			<if test='searchVal.equals("1")'> <!-- 할인중 -->
  				ingre_discnt_rate > 0
  			</if>
  			<if test='searchVal.equals("0")'> <!-- 할인 안하는것 -->
  				ingre_discnt_rate = 0 and ingre_type='메인재료'
  			</if>
  		</if>
  		<if test="searchType.equals('ingreActive')">
  			<if test='searchVal.equals("1")'> <!-- 활성화 -->
  				ingre_active = #{searchVal}
  			</if>
  			<if test='searchVal.equals("0")'> <!-- 비활성화 -->
  				ingre_active = #{searchVal}
  			</if>
  		</if>
  	</if>
  	 order by ingre_reg_date desc) i)
  </select>
  
  <!-- select * from (select rownum as rnum, b.* from (select ba.no, m.name careNm, ba.id, ba.name,ba.phone, ba.visit_date, ba.visit_time, ba.apply_date, ba.status 
  from ((select * from book_apply where code=?"+ sql +" order by 1 desc)ba) Join member m Using(code)) b) 
  where rnum BETWEEN ? and ? -->
  <!-- select rnum, ingre_idx as ingreIdx, ingre_label as ingreLabel, ingre_type as ingreType, ingre_cost15 as ingreCost15, ingre_cost30 as ingreCost30, ingre_discnt_rate as ingreDiscntRate, ingre_kcal as ingreKcal, ingre_kcal_salad as ingreKcalSalad, ingre_active as ingreActive, ingre_unit as ingreUnit, ingre_description as ingreDescription, ingre_filepath as ingreFilepth,ingre_reg_date as ingreRegDate -->
</mapper>
