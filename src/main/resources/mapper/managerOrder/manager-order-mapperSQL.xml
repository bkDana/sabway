<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="managerOrder">
	<select id="totalCount" parameterType="search" resultType="_int">
		select 
			count(*) cnt 
		from 
			m_order_tbl mot, manager m
	  	where 
	  		mot.m_order_manager_id = m.mgr_id
	  	<if test="startDay!=null and startDay!=''">
			and mot.m_order_date>#{startDay}
		</if>
		<if test="endDay!=null and endDay!=''">
			and TO_CHAR(m_order_date,'YYYY-MM-DD') <![CDATA[ < ]]>= #{endDay}
		</if>
		<if test="delDay!=null and delDay!=''">
			and mot.m_order_del_date=#{delDay}
		</if>
		<if test="state!=0">
			and mot.m_order_state=#{state}
		</if>
		<if test="searchType != null and searchType != ''">
			<if test="searchType.equals('name')">
				and LOWER(m.mgr_name) like LOWER('%'||#{searchVal}||'%')
			</if>	
		</if>
		<choose>
  			<when test="mgrId.equals('admin')">

  			</when>
  			<otherwise>
  				where m_order_manager_id = #{mgrId}
  			</otherwise>
  		</choose>
	</select>
	<select id="selectList" parameterType="search" resultType="mOrder">
  		select 
  			rnum,
  			m_order_no as mOrderNo,
	  		m_order_manager_id as mOrderManagerId,
	  		m_order_title as mOrderTitle,
	  		TO_CHAR(m_order_del_date,'YYYY-MM-DD') as mOrderDelDate,
	  		m_order_state as mOrderState,
	  		TO_CHAR(m_order_date,'YYYY-MM-DD HH24:mi:ss') as mOrderDate,
	  		mgr_name as mgrName
	  	from ( select 
	  				rownum rnum,
	  				mo.* 
	  			from (select * from m_order_tbl mot, manager m
	  			where mot.m_order_manager_id = m.mgr_id
	  				<if test="startDay!=null and startDay!=''">
						and mot.m_order_date>#{startDay}
					</if>
					<if test="endDay!=null and endDay!=''">
						and TO_CHAR(m_order_date,'YYYY-MM-DD') <![CDATA[ < ]]>= #{endDay}
					</if>
					<if test="delDay!=null and delDay!=''">
						and mot.m_order_del_date=#{delDay}
					</if>
					<if test="state!=0">
						and mot.m_order_state=#{state}
					</if>	
					<if test="searchType != null and searchType != ''">
						<if test="searchType.equals('name')">
							and LOWER(m.mgr_name) like LOWER('%'||#{searchVal}||'%')
						</if>	
					</if>
					<choose>
			  			<when test="mgrId.equals('admin')">
			
			  			</when>
			  			<otherwise>
			  				and mot.m_order_manager_id = #{mgrId}
			  			</otherwise>
			  		</choose>
	  			order by
	  			<choose>
	  				<when test="orderBy!=null and orderBy!=''">
	  					<if test="orderBy.equals('del')">4 desc</if>
	  					<if test="orderBy.equals('new')">6 desc</if>
	  					<if test="orderBy.equals('store')">10 asc</if>
	  				</when>
	  				<otherwise>
	  					6 desc
	  				</otherwise>
		  		</choose>
	  			
	  			) mo
  			 )
  		where 
  			rnum between #{start} and #{end}
  	</select>
  	<insert id="addOrder" parameterType="mOrder">
  		insert into m_order_tbl values(#{mOrderNo},#{mOrderManagerId},#{mOrderTitle},#{mOrderDelDate},1,sysdate)
  	</insert>
  	<insert id="addItem" parameterType="item">
  		insert into m_item_tbl values(m_item_seq.nextval,#{mOrderNo},#{itemIdx},#{mItemName},#{mItemAmount})
  	</insert>
  	<select id="selectOrder" parameterType="string" resultType="mOrder">
  		select 
  			m_order_no as mOrderNo,
	  		m_order_manager_id as mOrderManagerId,
	  		m_order_title as mOrderTitle,
	  		TO_CHAR(m_order_del_date,'YYYY-MM-DD') as mOrderDelDate,
	  		m_order_state as mOrderState,
	  		TO_CHAR(m_order_date,'YYYY-MM-DD HH24:mi:ss') as mOrderDate
	  	from 
	  		m_order_tbl
  		where 
  			m_order_no = #{no}
  	</select>
  	<select id="selectItem" parameterType="string" resultType="item">
  		select 
  			m_item_idx as mItemIdx,
	  		item_idx as itemIdx,
	  		m_item_name as mItemName,
	  		m_item_amount as mItemAmount
	  	from 
	  		m_item_tbl
  		where 
  			m_order_no = #{no}
  	</select>
  	<!-- 
  	<select id="selectType" resultType="string">
  		select distinct ingre_type from ingredients
  	</select>
  	 -->
  	<select id="selectIngre" parameterType="string" resultType="ingre">
  		select
  			ingre_idx as ingreIdx,
  			ingre_label as ingreLabel,
  			ingre_unit as ingreUnit
  		from 
  			ingredients
  		where 
  			ingre_type = #{type}
  		order by 1
  	</select>
  	<update id="updateState" parameterType="mOrder">
  		update 
  			m_order_tbl 
  		set 
  			m_order_state=#{mOrderState}
  		where 
  			m_order_no=#{mOrderNo}
  	</update>
  	<update id="deliveryEnd" parameterType="search">
  		update 
  			m_order_tbl 
  		set 
  			m_order_state=3
  		where 
  			m_order_del_date = #{delDay}
  			and m_order_state=2
  	</update>
  	<select id="delStock" parameterType="search" resultType="stock">
  		select 
  			m_order_manager_id as mOrderManagerId,
  			item_idx as mItemIdx,
  			m_item_amount as mItemAmount 
  		from  
  			m_order_tbl mot, m_item_tbl mit
  		where 
            mot.m_order_no = mit.m_order_no
  			and m_order_del_date <![CDATA[ < ]]>= #{delDay}
  			and m_order_state=2
  	</select>
  	<select id="findStock" parameterType="stock" resultType="stock">
  		select
  			m_stock_idx as mStockIdx
  		from 
  			m_stock_tbl
  		where
  			m_order_manager_id = #{mOrderManagerId}
  			and item_idx = #{mItemIdx}
  	</select>
  	<insert id="insertStock" parameterType="stock">
  		insert into m_stock_tbl values(m_stock_seq.nextval,#{mOrderManagerId},#{mItemIdx},#{mItemAmount})
  	</insert>
  	<update id="updateStock" parameterType="stock">
  		update 
  			m_stock_tbl 
  		set 
  			m_stock=m_stock+#{mItemAmount}
  		where 
  			m_stock_idx = #{mStockIdx}
  	</update>
</mapper>
